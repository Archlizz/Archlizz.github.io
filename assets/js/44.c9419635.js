(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{613:function(n,e,t){"use strict";t.r(e);var a=t(1),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"fox2-0前端框架-开发规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fox2-0前端框架-开发规范"}},[n._v("#")]),n._v(" Fox2.0前端框架-开发规范")]),n._v(" "),t("hr"),n._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#_1-前端目录结构"}},[n._v("1.前端目录结构")])]),t("li",[t("a",{attrs:{href:"#_2-后端目录结构"}},[n._v("2.后端目录结构")])]),t("li",[t("a",{attrs:{href:"#_3-js规范"}},[n._v("3.JS规范")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-类型"}},[n._v("3.1 类型")])]),t("li",[t("a",{attrs:{href:"#_3-2-对象"}},[n._v("3.2 对象")])]),t("li",[t("a",{attrs:{href:"#_3-3-数组"}},[n._v("3.3 数组")])]),t("li",[t("a",{attrs:{href:"#_3-3-字符串"}},[n._v("3.3 字符串")])]),t("li",[t("a",{attrs:{href:"#_3-5-函数"}},[n._v("3.5 函数")])]),t("li",[t("a",{attrs:{href:"#_3-6-属性"}},[n._v("3.6 属性")])]),t("li",[t("a",{attrs:{href:"#_3-7-变量"}},[n._v("3.7 变量")])]),t("li",[t("a",{attrs:{href:"#_3-8-条件表达式和等号"}},[n._v("3.8 条件表达式和等号")])]),t("li",[t("a",{attrs:{href:"#_3-9-块"}},[n._v("3.9 块")])]),t("li",[t("a",{attrs:{href:"#_3-10-注释"}},[n._v("3.10 注释")])]),t("li",[t("a",{attrs:{href:"#_3-11-空白"}},[n._v("3.11 空白")])]),t("li",[t("a",{attrs:{href:"#_3-12-逗号"}},[n._v("3.12 逗号")])]),t("li",[t("a",{attrs:{href:"#_3-13-分号"}},[n._v("3.13 分号")])]),t("li",[t("a",{attrs:{href:"#_3-14-类型转换"}},[n._v("3.14 类型转换")])]),t("li",[t("a",{attrs:{href:"#_3-14-命名约定"}},[n._v("3.14 命名约定")])])])])])]),t("p"),n._v(" "),t("h2",{attrs:{id:"_1-前端目录结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-前端目录结构"}},[n._v("#")]),n._v(" 1.前端目录结构")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(".\n├── custom                              项目相关配置和资源目录\n│   ├── css                             项目公共css\n│   ├── fonts                           项目公共fonts\n│   ├── js                              项目公共js(工具类)\n│   ├── plugins                         项目定义原生插件js接口 \n│   ├── plugins_ios                     项目定义ios原生插件js接口\n│   ├── route-tables                    项目路由表\n│   ├── templates                       自定义组件\n│   └── main**.js                       入口函数、服务过滤器、录用过滤器、校验功能配置\n├── debug                               调试信息\n│   ├── fox.device                      外设调试配置\n│   ├── fox.file                        原生文件操作调试配置\n│   ├── fox.native                      原生native接口调试配置\n│   ├── fox.preference                  原生prefrence调试配置\n│   └── fox.servcie                     服务请求调试配置\n├── libs                                公共lib目录\n│   ├── fox                             fox公共库\n│   ├── fox-ui                          fox ui基础库\n│   ├── lib                             vue、console整合库\n│   ├── plugins                         平台原生访问接口\n│   └── templates                       公共组件库\n├── pages                               项目页面目录\n│   └── phone\n│       └── demo\n├── resource\n│   └── image\n└── themes                              主题目录\n    └── default\n        ├── css                         主题css \n        ├── fonts\n        └── images                       主题font\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br")])]),t("blockquote",[t("p",[n._v("注意事项\na、custom/css、custom/font是放置无主题属性的css和font、而theme/css、theme/font是主题相关的，优先考虑theme。\nb、项目中多处使用的js方法，应当抽取到custom/js中。\nc、pages下的文件夹、文件命名不推荐使用驼峰风格，应该使用下划线分隔：\nschoolScene  不推荐\nschool_scene 推荐")])]),n._v(" "),t("h2",{attrs:{id:"_2-后端目录结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-后端目录结构"}},[n._v("#")]),n._v(" 2.后端目录结构")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("--工程\n----服务        后端服务\n------common    公共服务\n------配置文件  服务配置文件\n----公用        工具类、公共函数\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("blockquote",[t("p",[n._v("注意事项\na、项目中的公共方法尽量抽取出来，放在服务/common或公用目录中\nb、SQL不用使用+拼接，而是使用占位符预编译的方式")])]),n._v(" "),t("h2",{attrs:{id:"_3-js规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-js规范"}},[n._v("#")]),n._v(" 3.JS规范")]),n._v(" "),t("h3",{attrs:{id:"_3-1-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-类型"}},[n._v("#")]),n._v(" 3.1 类型")]),n._v(" "),t("p",[n._v("原始值: 相当于传值(JavaScript对象都提供了字面量)，使用字面量创建对象。")]),n._v(" "),t("ul",[t("li",[n._v("string")]),n._v(" "),t("li",[n._v("number")]),n._v(" "),t("li",[n._v("Boolean")]),n._v(" "),t("li",[n._v("null")]),n._v(" "),t("li",[n._v("Undefined")])]),n._v(" "),t("blockquote",[t("p",[n._v("let foo = 1,bar = foo; bar = 9; console.log(foo, bar); // => 1, 9")])]),n._v(" "),t("p",[n._v("复杂类型: 相当于传引用")]),n._v(" "),t("ul",[t("li",[n._v("object")]),n._v(" "),t("li",[n._v("array")]),n._v(" "),t("li",[n._v("function")])]),n._v(" "),t("blockquote",[t("p",[n._v("let foo = [1, 2],bar = foo;"),t("br"),n._v("\nbar[0] = 9;\nconsole.log(foo[0], bar[0]); // => 9, 9")])]),n._v(" "),t("h3",{attrs:{id:"_3-2-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-对象"}},[n._v("#")]),n._v(" 3.2 对象")]),n._v(" "),t("ul",[t("li",[n._v("使用字面值创建对象")])]),n._v(" "),t("blockquote",[t("pre",[t("code",[n._v("// bad\n let item = new Object();\n// good\n    let item = {};\n")])])]),n._v(" "),t("ul",[t("li",[n._v("不要使用保留字 reserved words 作为键")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nlet superman = {\nclass: 'superhero',\ndefault: { clark: 'kent' },\nprivate: true\n}; // good\nlet superman = {\nklass: 'superhero',\ndefaults: { clark: 'kent' },\nhidden: true\n};")])]),n._v(" "),t("h3",{attrs:{id:"_3-3-数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-数组"}},[n._v("#")]),n._v(" 3.3 数组")]),n._v(" "),t("ul",[t("li",[n._v("使用字面值创建数组")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nlet items = new Array();\n// good\nlet items = [];")])]),n._v(" "),t("ul",[t("li",[n._v("如果你不知道数组的长度，使用push")])]),n._v(" "),t("blockquote",[t("p",[n._v("let someStack = [];\n// bad\nsomeStack[someStack.length] = 'abracadabra';\n// good\nsomeStack.push('abracadabra');")])]),n._v(" "),t("ul",[t("li",[n._v("当你需要拷贝数组时使用slice. jsPerf")])]),n._v(" "),t("blockquote",[t("p",[n._v("let len = items.length,\nitemsCopy = [],\ni;\n// bad\nfor (i = 0; i < len; i++) {\nitemsCopy[i] = items[i];\n}\n// good\nitemsCopy = items.slice();")])]),n._v(" "),t("ul",[t("li",[n._v("使用slice将类数组的对象转成数组")])]),n._v(" "),t("blockquote",[t("p",[n._v("function trigger() {\nlet args = [].slice.apply(arguments);\n...\n}")])]),n._v(" "),t("h3",{attrs:{id:"_3-3-字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-字符串"}},[n._v("#")]),n._v(" 3.3 字符串")]),n._v(" "),t("ul",[t("li",[n._v("对字符串使用单引号 ''(因为大多时候我们的字符串。特别html会出现\")")])]),n._v(" "),t("blockquote"),n._v(" "),t("pre",[t("code",[n._v(" // bad\n let name = \"Bob Parr\";\n // good\n let name = 'Bob Parr';\n // bad\n let fullName = \"Bob \" + this.lastName;\n // good\n let fullName = 'Bob ' + this.lastName;\n")])]),n._v(" "),t("ul",[t("li",[n._v("超过80(也有规定140的，项目具体可制定)个字符的字符串应该使用字符串连接换行")]),n._v(" "),t("li",[n._v("注: 如果过度使用，长字符串连接可能会对性能有影响. jsPerf & Discussion")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nlet errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had\nanything to do with this, you would get nowhere fast.';")]),n._v(" "),t("pre",[t("code",[n._v("// bad\nlet errorMessage = 'This is a super long error that \\\n    was thrown because of Batman. \\\n    When you stop to think about \\\n    how Batman had anything to do \\\n    with this, you would get nowhere \\\n    fast.';\n\n\n// good\nlet errorMessage = 'This is a super long error that ' +\n    'was thrown because of Batman.' +\n    'When you stop to think about ' +\n    'how Batman had anything to do ' +\n    'with this, you would get nowhere ' +\n    'fast.';\n")])])]),n._v(" "),t("ul",[t("li",[n._v("编程时使用join而不是字符串连接来构建字符串，特别是IE: jsPerf")])]),n._v(" "),t("blockquote",[t("p",[n._v("let items,\nmessages,\nlength, i;")]),n._v(" "),t("pre",[t("code",[n._v("messages = [{\n    state: 'success',\n    message: 'This one worked.'\n},{\n    state: 'success',\n    message: 'This one worked as well.'\n},{\n    state: 'error',\n    message: 'This one did not work.'\n}];\n\nlength = messages.length;\n\n// bad\nfunction inbox(messages) {\nitems = '<ul>';\n\nfor (i = 0; i < length; i++) {\n    items += '<li>' + messages[i].message + '</li>';\n}\n\nreturn items + '</ul>';\n}\n\n// good\nfunction inbox(messages) {\nitems = [];\n\nfor (i = 0; i < length; i++) {\n    items[i] = messages[i].message;\n}\n\nreturn '<ul><li>' + items.join('</li><li>') + '</li></ul>';\n}\n")])])]),n._v(" "),t("h3",{attrs:{id:"_3-5-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-函数"}},[n._v("#")]),n._v(" 3.5 函数")]),n._v(" "),t("ul",[t("li",[n._v("函数表达式")])]),n._v(" "),t("blockquote",[t("p",[n._v("// 匿名函数表达式\nlet anonymous = function() {\nreturn true;\n};")]),n._v(" "),t("pre",[t("code",[n._v("// 有名函数表达式\nlet named = function named() {\n    return true;\n};\n\n// 立即调用函数表达式\n(function() {\n    console.log('Welcome to the Internet. Please follow me.');\n})();\n")])])]),n._v(" "),t("ul",[t("li",[n._v("绝对不要在一个非函数块里声明一个函数，把那个函数赋给一个变量。浏览器允许你这么做，但是它们解析不同")]),n._v(" "),t("li",[n._v("注: ECMA-262定义把块定义为一组语句，函数声明不是一个语句。阅读ECMA-262对这个问题的说明")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nif (currentUser) {\nfunction test() {\nconsole.log('Nope.');\n}\n}")]),n._v(" "),t("pre",[t("code",[n._v("// good\nif (currentUser) {\nlet test = function test() {\n    console.log('Yup.');\n};\n}\n")])])]),n._v(" "),t("ul",[t("li",[n._v("绝对不要把参数命名为 arguments, 这将会逾越函数作用域内传过来的 arguments 对象")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nfunction nope(name, options, arguments) {\n// ...stuff...\n}")]),n._v(" "),t("pre",[t("code",[n._v("// good\nfunction yup(name, options, args) {\n    // ...stuff...\n}\n")])])]),n._v(" "),t("h3",{attrs:{id:"_3-6-属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-属性"}},[n._v("#")]),n._v(" 3.6 属性")]),n._v(" "),t("ul",[t("li",[n._v("当使用变量和特殊非法变量名时，访问属性时可以使用中括号(. 优先)")])]),n._v(" "),t("blockquote",[t("pre",[t("code",[n._v("let luke = {\n        jedi: true,\n        age: 28\n    };\n\nfunction getProp(prop) {\n    return luke[prop];\n}\n\nlet isJedi = getProp('jedi');\n")])])]),n._v(" "),t("h3",{attrs:{id:"_3-7-变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-变量"}},[n._v("#")]),n._v(" 3.7 变量")]),n._v(" "),t("ul",[t("li",[n._v("总是使用 let 来声明变量，如果不这么做将导致产生全局变量，我们要避免污染全局命名空间")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nsuperPower = new SuperPower();")]),n._v(" "),t("pre",[t("code",[n._v("// good\nlet superPower = new SuperPower();\n")])])]),n._v(" "),t("ul",[t("li",[n._v("使用一个 let 以及新行声明多个变量，缩进4个空格")])]),n._v(" "),t("blockquote",[t("pre",[t("code",[n._v("// bad\nlet items = getItems();\nlet goSportsTeam = true;\nlet dragonball = 'z';\n\n// good\nlet items = getItems(),\n    goSportsTeam = true,\n    dragonball = 'z';\n")])])]),n._v(" "),t("ul",[t("li",[n._v("最后再声明未赋值的变量，当你想引用之前已赋值变量的时候很有用")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nlet i, len, dragonball,\nitems = getItems(),\ngoSportsTeam = true;\n// bad\nlet i, items = getItems(),\ndragonball,\ngoSportsTeam = true,\nlen;")]),n._v(" "),t("pre",[t("code",[n._v("// good\nlet items = getItems(),\n    goSportsTeam = true,\n    dragonball,\n    length,\n    i;\n")])])]),n._v(" "),t("ul",[t("li",[n._v("在作用域顶部声明变量，避免变量声明和赋值引起的相关问题")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nfunction() {\ntest();\nconsole.log('doing stuff..');")]),n._v(" "),t("pre",[t("code",[n._v("    //..other stuff..\n\n    let name = getName();\n\n    if (name === 'test') {\n        return false;\n    }\n\n    return name;\n}\n\n// good\nfunction() {\n    let name = getName();\n\n    test();\n    console.log('doing stuff..');\n\n    //..other stuff..\n\n    if (name === 'test') {\n        return false;\n    }\n\n    return name;\n}\n\n// bad\nfunction() {\n    let name = getName();\n\n    if (!arguments.length) {\n        return false;\n    }\n\n    return true;\n}\n\n// good\nfunction() {\n    if (!arguments.length) {\n        return false;\n    }\n\n    let name = getName();\n\n    return true;\n}\n")])])]),n._v(" "),t("h3",{attrs:{id:"_3-8-条件表达式和等号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-条件表达式和等号"}},[n._v("#")]),n._v(" 3.8 条件表达式和等号")]),n._v(" "),t("ul",[t("li",[n._v("合理使用 === 和 !== 以及 == 和 !=")]),n._v(" "),t("li",[n._v("合理使用表达式逻辑操作运算")]),n._v(" "),t("li",[n._v("条件表达式的强制类型转换遵循以下规则\n"),t("ol",[t("li",[n._v("对象 被计算为 true")]),n._v(" "),t("li",[n._v("undefined 被计算为 false")]),n._v(" "),t("li",[n._v("null 被计算为 false")]),n._v(" "),t("li",[n._v("布尔值 被计算为 布尔的值")]),n._v(" "),t("li",[n._v("数字 如果是 +0, -0, or NaN 被计算为 false , 否则为 true")]),n._v(" "),t("li",[n._v("字符串 如果是空字符串 '' 则被计算为 false, 否则为 true")])])])]),n._v(" "),t("blockquote",[t("pre",[t("code",[n._v("if ([0]) {\n    // true\n    // An array is an object, objects evaluate to true\n}\n")])])]),n._v(" "),t("ul",[t("li",[n._v("使用快捷方式")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nif (name !== '') {\n// ...stuff...\n}")]),n._v(" "),t("pre",[t("code",[n._v("// good\nif (name) {\n    // ...stuff...\n}\n\n// bad\nif (collection.length > 0) {\n    // ...stuff...\n}\n\n// good\nif (collection.length) {\n    // ...stuff...\n}\n")])])]),n._v(" "),t("ul",[t("li",[n._v("阅读 Truth Equality and JavaScript 了解更多")])]),n._v(" "),t("h3",{attrs:{id:"_3-9-块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-块"}},[n._v("#")]),n._v(" 3.9 块")]),n._v(" "),t("ul",[t("li",[n._v("给所有多行的块使用大括号")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nif (test)\nreturn false;")]),n._v(" "),t("pre",[t("code",[n._v("// good\nif (test) return false;\n\n// good\nif (test) {\n    return false;\n}\n\n// bad\nfunction() { return false; }\n\n// good\nfunction() {\n    return false;\n}\n")])])]),n._v(" "),t("h3",{attrs:{id:"_3-10-注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-注释"}},[n._v("#")]),n._v(" 3.10 注释")]),n._v(" "),t("ul",[t("li",[n._v("使用 /** ... */ 进行多行注释，包括描述，指定类型以及参数值和返回值")])]),n._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// bad")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// make() returns a new element")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// based on the passed in tag name")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("//")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// @param <String> tag")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// @return <Element> element")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("tag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// ...stuff...")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" element"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// good")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n>     * make() returns a new element\n>     * based on the passed in tag name\n>     *\n>     * @param <String> tag\n>     * @return <Element> element\n>     */")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("tag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// ...stuff...")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" element"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br")])]),t("ul",[t("li",[n._v("使用 // 进行单行注释，在评论对象的上面进行单行注释，注释前放一个空行")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nlet active = true;  // is current tab")]),n._v(" "),t("pre",[t("code",[n._v("// good\n// is current tab\nlet active = true;\n\n// bad\nfunction getType() {\n    console.log('fetching type...');\n        // set the default type to 'no type'\n    let type = this._type || 'no type';\n\n    return type;\n}\n\n// good\nfunction getType() {\n    console.log('fetching type...');\n\n    // set the default type to 'no type'\n    let type = this._type || 'no type';\n\n    return type;\n}\n")])])]),n._v(" "),t("ul",[t("li",[n._v("如果你有一个问题需要重新来看一下或如果你建议一个需要被实现的解决方法的话需要在你的注释前面加上 FIXME 或 TODO 帮助其他人迅速理解")])]),n._v(" "),t("blockquote",[t("pre",[t("code",[n._v("function Calculator() {\n\n    // FIXME: shouldn't use a global here\n    total = 0;\n\n    return this;\n}\nfunction Calculator() {\n\n    // TODO: total should be configurable by an options param\n    this.total = 0;\n\n    return this;\n}\n")])])]),n._v(" "),t("ul",[t("li",[n._v("满足规范的文档，在需要文档的时候，可以尝试jsdoc")])]),n._v(" "),t("h3",{attrs:{id:"_3-11-空白"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-空白"}},[n._v("#")]),n._v(" 3.11 空白")]),n._v(" "),t("ul",[t("li",[n._v("缩进、格式化能帮助团队更快得定位修复代码BUG")]),n._v(" "),t("li",[n._v("将tab设为4个空格")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nfunction() {\n∙∙let name;\n}")]),n._v(" "),t("pre",[t("code",[n._v("// bad\nfunction() {\n∙let name;\n}\n\n// good\nfunction() {\n∙∙∙∙let name;\n}\n")])])]),n._v(" "),t("ul",[t("li",[n._v("大括号前放一个空格")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nfunction test(){\nconsole.log('test');\n}")]),n._v(" "),t("pre",[t("code",[n._v("// good\nfunction test() {\n    console.log('test');\n}\n\n// bad\ndog.set('attr',{\n    age: '1 year',\n    breed: 'Bernese Mountain Dog'\n});\n\n// good\ndog.set('attr', {\n    age: '1 year',\n    breed: 'Bernese Mountain Dog'\n});\n")])])]),n._v(" "),t("ul",[t("li",[n._v("在做长方法链时使用缩进")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\n"),t("code",[n._v("$('#items').find('.selected').highlight().end().find('.open').updateCount();")])]),n._v(" "),t("p",[n._v("good"),t("br"),n._v("\n$('#items')\n.find('.selected')\n.highlight()\n.end()\n.find('.open')\n.updateCount();\n// bad\nlet leds = stage.selectAll('.led').data(data).enter().append('svg:svg').class('led',\ntrue)\n.attr('width',  (radius + margin) * 2).append('svg:g')\n.attr('transform', 'translate(' + (radius + margin) + ',' + (radius + margin) + ')')\n.call(tron.led); // good let leds = stage.selectAll('.led')\n.data(data)\n.enter().append('svg:svg')\n.class('led', true)\n.attr('width',  (radius + margin) * 2)\n.append('svg:g')\n.attr('transform', 'translate(' + (radius + margin) + ',' + (radius + margin) + ')')\n.call(tron.led);")])]),n._v(" "),t("h3",{attrs:{id:"_3-12-逗号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-12-逗号"}},[n._v("#")]),n._v(" 3.12 逗号")]),n._v(" "),t("ul",[t("li",[n._v("不要将逗号放前面")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nlet once\n, upon\n, aTime;")]),n._v(" "),t("pre",[t("code",[n._v("// good\nlet once,\n    upon,\n    aTime;\n\n// bad\nlet hero = {\n        firstName: 'Bob'\n    , lastName: 'Parr'\n    , heroName: 'Mr. Incredible'\n    , superPower: 'strength'\n};\n\n// good\nlet hero = {\n    firstName: 'Bob',\n    lastName: 'Parr',\n    heroName: 'Mr. Incredible',\n    superPower: 'strength'\n};\n")])])]),n._v(" "),t("ul",[t("li",[n._v("不要加多余的逗号，这可能会在IE下引起错误，同时如果多一个逗号某些ES3的实现会计算多数组的长度")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nlet hero = {\nfirstName: 'Kevin',\nlastName: 'Flynn',\n};")]),n._v(" "),t("pre",[t("code",[n._v("let heroes = [\n'Batman',\n'Superman',\n];\n\n// good\nlet hero = {\nfirstName: 'Kevin',\nlastName: 'Flynn'\n};\n\nlet heroes = [\n'Batman',\n'Superman'\n];\n")])])]),n._v(" "),t("h3",{attrs:{id:"_3-13-分号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-13-分号"}},[n._v("#")]),n._v(" 3.13 分号")]),n._v(" "),t("ul",[t("li",[n._v("语句结束一定要加分号")])]),n._v(" "),t("blockquote",[t("pre",[t("code",[n._v("// bad\n(function() {\n    let name = 'Skywalker'\n    return name\n})()\n\n// good\n(function() {\n    let name = 'Skywalker';\n    return name;\n})();\n\n// good\n;(function() {\n    let name = 'Skywalker';\n    return name;\n})();\n")])])]),n._v(" "),t("h3",{attrs:{id:"_3-14-类型转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-类型转换"}},[n._v("#")]),n._v(" 3.14 类型转换")]),n._v(" "),t("ul",[t("li",[n._v("在语句的开始执行类型转换.")]),n._v(" "),t("li",[n._v("字符串")])]),n._v(" "),t("blockquote",[t("pre",[t("code",[n._v("this.reviewScore = 9;\n\n// bad\nlet totalScore = this.reviewScore + '';\n\n// good\nlet totalScore = '' + this.reviewScore;\n\n// bad\nlet totalScore = '' + this.reviewScore + ' total score';\n\n// good\nlet totalScore = this.reviewScore + ' total score';\n")])])]),n._v(" "),t("ul",[t("li",[n._v("对数字使用 parseInt 并且总是带上类型转换的基数.，如parseInt(value, 10)")])]),n._v(" "),t("blockquote",[t("p",[n._v("let inputValue = '4';")]),n._v(" "),t("pre",[t("code",[n._v("// bad\nlet val = new Number(inputValue);\n\n// bad\nlet val = +inputValue;\n\n// bad\nlet val = inputValue >> 0;\n\n// bad\nlet val = parseInt(inputValue);\n\n// good\nlet val = Number(inputValue);\n\n// good\nlet val = parseInt(inputValue, 10);\n\n// good\n/**\n* parseInt was the reason my code was slow.\n* Bitshifting the String to coerce it to a\n* Number made it a lot faster.\n*/\nlet val = inputValue >> 0;\n")])])]),n._v(" "),t("ul",[t("li",[n._v("布尔值")])]),n._v(" "),t("blockquote",[t("p",[n._v("let age = 0;")]),n._v(" "),t("pre",[t("code",[n._v("// bad\nlet hasAge = new Boolean(age);\n\n// good\nlet hasAge = Boolean(age);\n\n// good\nlet hasAge = !!age;\n")])])]),n._v(" "),t("h3",{attrs:{id:"_3-14-命名约定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-命名约定"}},[n._v("#")]),n._v(" 3.14 命名约定")]),n._v(" "),t("ul",[t("li",[n._v("避免单个字符名，让你的变量名有描述意义")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nfunction q() {\n// ...stuff...\n}\n// good\nfunction query() {\n// ..stuff..\n}")])]),n._v(" "),t("ul",[t("li",[n._v("当命名对象、函数和实例时使用驼峰命名规则")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nlet OBJEcttsssss = {};\nlet this_is_my_object = {};\nlet this-is-my-object = {};\nfunction c() {};\nlet u = new user({\nname: 'Bob Parr'\n});\n// good\nlet thisIsMyObject = {};\nfunction thisIsMyFunction() {};\nlet user = new User({\nname: 'Bob Parr'\n});")])]),n._v(" "),t("ul",[t("li",[n._v("当命名构造函数或类时使用驼峰式大写")])]),n._v(" "),t("blockquote",[t("p",[n._v("// bad\nfunction user(options) {\nthis.name = options.name;\n}\nlet bad = new user({\nname: 'nope'\n});\n// good\nfunction User(options) {\nthis.name = options.name;\n}\nlet good = new User({\nname: 'yup'\n});")])]),n._v(" "),t("ul",[t("li",[n._v("命名私有属性时前面加个下划线")])]),n._v(" "),t("blockquote",[t("pre",[t("code",[n._v("// bad\nthis.__firstName__ = 'Panda';\nthis.firstName_ = 'Panda';\n\n// good\nthis._firstName = 'Panda';\n")])])]),n._v(" "),t("ul",[t("li",[n._v("当保存对 this 的引用时使用 self(python 风格),避免this  issue.Angular建议使用vm(MVVM模式中view-model)")])]),n._v(" "),t("blockquote",[t("p",[n._v("// good\nfunction() {\nlet self = this;\nreturn function() {\nconsole.log(self);\n};\n}")])])])}),[],!1,null,null,null);e.default=s.exports}}]);